#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

set -x
set -e

SCRIPT_PATH="$(readlink -f $0)"
SCRIPT_DIR="${SCRIPT_PATH%/*}"

. ${SCRIPT_DIR}/../common/common_funcs
. ${SCRIPT_DIR}/functions

S3_CRED_FILE="${SCRIPT_DIR}/s3_credentials_$(hostname -s)"
S3_SRV_CLI_MAP=$1
S3_WORKLOAD=$2

function run_s3bench() {
    # Create individual buckets on S3 srvs per server node
    local bucket="seagatebucket-$(hostname -s)"

    local credentials="-accessKey=$S3_CRED_ACCESS_KEY -accessSecret=$S3_CRED_SECRET_KEY"
    local static_params="-endpoint=https://s3.seagate.com -bucket=$bucket -jsonOutput"

    # workload with prefix_name
    $EX_CLI "ulimit -Hn 100000 && ulimit -Sn 100000 && s3bench $credentials $static_params $S3_WORKLOAD | tee /tmp/s3bench.log"
    $EX_CLI 'mv /tmp/s3bench.log /tmp/s3bench-$(hostname -s).log'
}

if [[ -z "$S3_CRED_FILE" ]]; then
    _err "credential file isn't specified"
    exit 1
fi

if [[ -z "$S3_SRV_CLI_MAP" ]]; then
    _err "servers-clients map isn't specified"
    exit 1
fi

if [[ -z "$S3_WORKLOAD" ]]; then
    _err "workload parameters aren't specified"
    exit 1
fi

parse_s3_cred_file $S3_CRED_FILE
parse_s3_nodes_map $S3_SRV_CLI_MAP

if [ -z "$CLI_NODES" ]; then
    exit 0
fi

EX_CLI="pdsh -S -w $CLI_NODES"

run_s3bench
