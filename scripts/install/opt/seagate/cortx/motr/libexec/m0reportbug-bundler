#!/usr/bin/env bash
#
# Copyright (c) 2020 Seagate Technology LLC and/or its Affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For any questions about this software or licensing,
# please email opensource@seagate.com or cortx-questions@seagate.com.
#

set -eu -o pipefail
export PS4='+ [${BASH_SOURCE[0]##*/}:${LINENO}${FUNCNAME[0]:+:${FUNCNAME[0]}}] '
# set -x

PROG=${0##*/}
DEFAULT_DEST_DIR=/tmp
COMPONENT=motr
CMD=

usage() {
    cat <<EOF
Usage: $PROG <bundle-id> <dest-dir>
       $PROG [-h | --help]

Create '<dest-dir>/$COMPONENT/${COMPONENT}_<bundle-id>.tar' archive
that contains m0reportbug archives
that contain Motr forensic data
that can be used for reporting and researching Motr bugs.

Required arguments:
  -t <dest-dir>    Target directory; defaults to '$DEFAULT_DEST_DIR'.
  -b <bundle-id>   Support bundle ID; defaults to the local host name
                   (`hostname`).
  -c <config_url>  cluster config URL
  -s|--services -> Service names for the services for which 
                logs needs to be collected. Default is 'All'
Optional arguments:
  --duration -> ISO 8061 format, "P" separates, the start datetime and duration 
                to be considered after that. "T" separated date and time. Default is P5d.
  --binlogs -> Bool value to include binary logs. Default is false.
  --size_limit -> Limit set on per component for its support bundle size. 
                  eg. "1G" for 1GB or "100M" for 100 MB. Default -> 0, for no size limit.
  --coredumps -> Bool value to include/exclude core dumps. Default is false. 
  --stacktrace -> Bool value to include/exclude stackTraces. Default is false.
Options:
  -h, --help   Show this help and exit.
EOF
}

die() {
    echo "$PROG: $*" >&2
    exit 1
}

case "${1:-}" in
    -h|--help) usage; exit;;
esac

if (($? != 0 && $? != 2)); then
    die "Wrong number of arguments. Type '$PROG --help' for usage."
fi

bundle_id=$HOSTNAME
dest_dir=$DEFAULT_DEST_DIR

duration=P5d
size_limit=0
services=All
stacktrace=false
coredumps=false
binlogs=false
TEMP=$( getopt -o c:b:t:s: -l duration:,size_limit:,services:,binlogs:,coredumps:,stacktrace: \
                  -n "$PROG" -- "$@")
eval set -- "$TEMP"
while true; do
     case "$1" in
         -b)bundle_id=$(echo $2 | sed -e 's/,/\n/g');
            shift 2;;
         -t)dest_dir=$(echo $2 | sed -e 's/,/\n/g');
            shift 2;;
         -c)config_url=$(echo $2 | sed -e 's/,/\n/g'); 
            shift 2 ;;
         --duration)
            duration=$(echo $2 | sed -e 's/,/\n/g') ;
            shift 2 ;;
         --size_limit)
            size_limit=$(echo $2 | sed -e 's/,/\n/g') ;
            shift 2 ;;
         -s|--services)
            services=$(echo $2 | sed -e 's/,/\n/g') ;
            shift 2 ;;
         --binlogs)
            rc=$(echo $2 | sed -e 's/,/\n/g') ;
            if [[ "$rc" != "true" &&  "$rc" != "false" ]]; then
                usage; exit;
            fi
            if [ "$rc" == "true" ]; then
                CMD+=" --binaries"
            fi
            shift 2 ;;
         --coredumps)
            rc=$(echo $2 | sed -e 's/,/\n/g') ;
            if [[ "$rc" != "true" &&  "$rc" != "false" ]]; then
                usage; exit;
            fi
            if [ "$rc" == "true" ]; then
                CMD+=" --coredumps"
            fi
            shift 2 ;;
         --stacktrace)
            rc=$(echo $2 | sed -e 's/,/\n/g') ;
            if [[ "$rc" != "true" &&  "$rc" != "false" ]]; then
                usage; exit;
            fi
            if [ "$rc" == "true" ]; then
                CMD+=" --stacktrace"
            fi
            shift 2 ;;
         --) shift; break;;
         *) break;;
     esac
done

if [[ -z "$bundle_id" || -z "$dest_dir" ]]; then
    die "Invalid argument. Type '$PROG --help' for usage."
fi

if [[ -a $dest_dir && ! -d $dest_dir ]]; then
    die "$dest_dir is not a directory"
fi

# XXX The intermediate `$COMPONENT` directory is required by the
# CSM Support Bundle spec-ification.
mkdir -p "$dest_dir/$COMPONENT/$HOSTNAME"
cd "$dest_dir/$COMPONENT/$HOSTNAME"

exec 2> >(tee _$PROG.stderr >&2)
sudo m0reportbug --addb $CMD

cd ..
# The archives generated by `m0reportbug` are already compressed (.tar.gz).
# compress them again to keep consistency with SB of other component.
tar --remove-files -czf "${COMPONENT}_${bundle_id}.tar.gz" $HOSTNAME
