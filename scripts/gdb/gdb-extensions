#
# m0-list-print command is defined in gdb-extensions.py
#
# It is mandatory that gdb-extensions.py is loaded before executing
# commands(that use m0-list-print) from this file.
#

printf "Loading gdb commands for Motr...\n"
#printf "NOTE: If not already done, DO load gdb-extensions.py\n"

define __visit_ft
	set $ft = (struct m0_fop_type *)$arg0
	printf "%p %s %d \n", $ft, $ft->ft_name, $ft->ft_rpc_item_type.rit_opcode
end

define m0-fop-types-list-print
	printf "address name opcode\n"

	# __visit_ft command will be called for each fop type in fop_types_list
	m0-list-print fop_types_list struct m0_fop_type ft_linkage __visit_ft
end
document m0-fop-types-list-print
	Prints global list of registered fop types
end

define __visit_session
	set $s = (struct m0_rpc_session *)$arg0
	printf "%p 0x%lx %u \n", $s, $s->s_session_id, $s->s_state
end

define m0-rpc-conn-print-sessions
	set $conn = (struct m0_rpc_conn *)$arg0
	printf "address session-id state\n"
	m0-list-print $conn->c_sessions struct m0_rpc_session s_link __visit_session
end
document m0-rpc-conn-print-sessions
	Prints list of sessions within connection

	Usage: m0-rpc-conn-print-sessions &conn
end

define frm-item
	set $item = (struct m0_rpc_item *)$arg0
	printf "item: %p deadline: %lu prio: %u\n", $item, $item->ri_deadline, $item->ri_prio
end
define m0-rpc-frm-itemq-print
	m0-list-print $arg0 struct m0_rpc_item ri_iq_link frm-item
end

define m0-sm-state
	set $sm = (struct m0_sm *)$arg0
	print $sm->sm_conf->scf_state[$sm->sm_state].sd_name
end
document m0-sm-state
	Prints current state of supplied sm, in human readable form

	Example:
	(gdb) m0-sm-state &session.s_sm
	$3 = 0x7ffff75ee5fa "Finalised"

end

define __visit_fom
	set $f = (struct m0_fom *)$arg0
	set $phase=$f->fo_sm_phase.sm_state
	printf "%p %s \n", $f, $f->fo_type.ft_rstype.rst_name
	printf "fom phase:%d %s \n", $phase, $f->fo_sm_phase.sm_conf.scf_state[$phase].sd_name 
end

define fomq
	set $i = $arg0

	print loc->fl_dom.fd_localities[$i].fl_wail_nr
	print loc->fl_dom.fd_localities[$i].fl_runq_nr
	printf "Locality %d\n", $i
	printf "Foms in wait queue \n"
	m0-list-print loc->fl_dom.fd_localities[$i].fl_wail struct m0_fom fo_linkage __visit_fom
	printf "Foms in runq queue \n"
	m0-list-print loc->fl_dom.fd_localities[$i].fl_runq struct m0_fom fo_linkage __visit_fom
end

define m0-loc-fomq
set $total = $arg0
set $i = 0
   while($i<$total)
     fomq $i
     set $i = $i + 1
   end
print $i
end

document m0-loc-fomq
	Prints state of foms in wait and run queues in all the localities.

	Example:
	# Get thread containing locality
	(gdb) t 38
	[Switching to thread 38 (Thread 0x7f22627fc700 (LWP 64351))]
		#0  0x00007f230d0387c0 in sem_wait () from /lib64/libpthread.so.0
	(gdb) f 3
		#3  0x00007f230d71d6ce in loc_handler_thread (th=0x1d4c4c0) at fop/fom.c:736
	(gdb) p loc
		#$1 = (struct m0_fom_locality *) 0x1d083b0
	(gdb) m0-loc-fomq 16
end

define runever
  set height 0
  while 1 > 0
    run
    if $_siginfo
      loop_break
    end
  end
end

define matrix_print
  set $m = $arg0
  set $r = $arg1
  set $c = $arg2

  set $i = 0
  set $j = 0
  printf "      "
  while $j < $c
    printf "%6d ", $j
    set $j = $j + 1
  end
  printf "\n"
  set $j = 0
  printf "++++++"
  while $j < $c
    printf "+++++++"
    set $j = $j + 1
  end
  printf "\n"
  while $i < $r
    set $j = 0
    printf "%3d + ", $i
    while $j < $c
      printf "%6d ", ((uint8_t *)$m)[$i * $c + $j]
      set $j = $j + 1
    end
    printf "\n"
    set $i = $i + 1
  end
end

document matrix_print
Print a matrix of a type used by parity math code.
Usage: matrix_print matrix rows columns
Where matrix is assumed to be an array of uint8_t-s.
end
