# -*- sh -*-

SYSCONFIG_DIR='/etc/sysconfig'
[ -d $SYSCONFIG_DIR ] || SYSCONFIG_DIR='/etc/default'

die() { echo "$@" >&2; exit 1; }

sandbox_init() {
    [ -n "${SANDBOX_DIR:-}" ] || die 'SANDBOX_DIR: unbound variable'
    rm -rf $SANDBOX_DIR
    mkdir -p $SANDBOX_DIR
    pushd $SANDBOX_DIR >/dev/null
}

sandbox_fini() {
    [ -n "${SANDBOX_DIR:-}" ] || die 'SANDBOX_DIR: unbound variable'
    local rc=${1:-0} # non-zero value denotes unsuccessful termination

    popd &>/dev/null || true
    if [ -z "${KEEP_SANDBOX:-}" -a $rc -eq 0 ]; then
        rm -r $SANDBOX_DIR
    fi
}

report_and_exit() {
    [ $# -eq 2 ] || die "${FUNCNAME[0]}: Invalid usage"
    local name=$1
    local rc=$2

    if [ $rc -eq 0 ]; then
        ## This message is used by Jenkins as a test success criteria;
        ## it must appear on stdout.
        echo "$name: test status: SUCCESS"
    else
        echo "$name: FAILURE $rc" >&2
    fi
    exit $rc
}

### Similar to `source` builtin command with `set +eu` in effect.
###
### Vanilla `. /etc/rc.d/init.d/functions` will fail if either "errexit"
### (set -e) or "nounset" (set -u) option is turned on.
source+eu() {
    local orig=$-
    set +eu
    . "$@"
    set -$orig
}

### Example:
###     $ opcode M0_LAYOUT_OPCODE
###     92
opcode() {
    [ $# -eq 1 ] || die "${FUNCNAME[0]}: Invalid usage"
    local NAME="$1"

    [ -n "${M0_SRC_DIR:-}" ] || die 'M0_SRC_DIR: unbound variable'
    grep -v '#pragma once' $M0_SRC_DIR/rpc/rpc_opcodes.h | cpp -I$M0_SRC_DIR |
        awk "/$NAME/ {print \$3}" | tr -d ,
}

m0_modules_insert() {
    insmod $M0_SRC_DIR/extra-libs/galois/src/linux_kernel/galois.ko ||
        die 'Inserting galois.ko failed'

    insmod $M0_SRC_DIR/m0tr.ko \
    local_addr=${M0T1FS_ENDPOINT%:*}: \
    max_rpc_msg_size=$MAX_RPC_MSG_SIZE \
    tm_recv_queue_min_len=$TM_MIN_RECV_QUEUE_LEN \
    ${M0_TRACE_IMMEDIATE_MASK:+trace_immediate_mask=$M0_TRACE_IMMEDIATE_MASK} \
    ${M0_TRACE_LEVEL:+trace_level=$M0_TRACE_LEVEL} \
    ${M0_TRACE_PRINT_CONTEXT:+trace_print_context=$M0_TRACE_PRINT_CONTEXT} \
    || {
        rmmod galois
        die 'Inserting m0tr.ko failed'
    }
    insmod $M0_SRC_DIR/m0ctl.ko || {
        rmmod m0tr
        rmmod galois
        die 'inserting m0ctl failed'
    }
}

m0_modules_remove() {
    rmmod m0ctl || true
    rmmod m0tr || true
    rmmod galois || true
}

lnet_up() {
    modprobe lnet
    lctl network up >/dev/null
    local LNET_NID=`lctl list_nids | head -1`

    ## LNet endpoint address format (see net/lnet/lnet.h):
    ##     NID:PID:Portal:TMID
    ##
    ## The PID value of 12345 is used by Lustre in the kernel and is
    ## the only value currently supported.
    export M0T1FS_ENDPOINT="$LNET_NID:12345:34:1"
    export M0D1_ENDPOINT="$LNET_NID:12345:34:1001"
    export M0D2_ENDPOINT="$LNET_NID:12345:34:1002"
    export M0D3_ENDPOINT="$LNET_NID:12345:34:1003"
    export SPIEL_ENDPOINT="$LNET_NID:12345:34:2001"
}
